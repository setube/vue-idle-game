!function(){"use strict";let e=null,s=null;self.onmessage=e=>{const{type:s,data:a}=e.data;switch(s){case"START_TASK":t(a);break;case"CANCEL_TASK":r();break;default:console.error("未知的消息类型:",s)}};const t=t=>{e&&r(),e={id:t.taskId,duration:t.duration,startTime:Date.now(),progress:t.initialProgress||0};const o=Math.max(50,Math.floor(t.duration/100));s=setInterval((()=>{a()}),o),e.progress>0&&self.postMessage({type:"TASK_PROGRESS",data:{taskId:e.id,progress:e.progress}})},a=()=>{if(!e)return;const t=Date.now()-e.startTime,a=Math.min(100,e.progress+Math.floor(t/e.duration*(100-e.progress)));e.progress=a,self.postMessage({type:"TASK_PROGRESS",data:{taskId:e.id,progress:a}}),a>=100&&(clearInterval(s),s=null,e=null)},r=()=>{s&&(clearInterval(s),s=null),e=null,self.postMessage({type:"TASK_CANCELLED"})};self.addEventListener("beforeunload",(()=>{s&&clearInterval(s)}))}();
